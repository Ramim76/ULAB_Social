<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - ULAB Social Media</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>Your Profile</h1>
        <nav>
            <a href="/">Home</a>
            <a href="/post">Create Post</a>
            <a href="/logout">Logout</a>
        </nav>
    </header>
    <main>
        <div class="welcome-message">
            Welcome to your profile, <%= user.username %>!
            <% if (user.role === 'student' && user.student_id) { %>
                <span class="user-badge student">Student ID: <%= user.student_id %></span>
            <% } else if (user.role === 'faculty') { %>
                <span class="user-badge faculty">Faculty</span>
            <% } else if (user.role === 'staff') { %>
                <span class="user-badge staff">Staff</span>
            <% } %>
            <% if (user.department_name) { %>
                <span class="dept-badge"><%= user.department_name %></span>
            <% } %>
        </div>
        
        <!-- Navigation Tabs -->
        <div class="nav-section">
            <a href="#posts" class="nav-tab active" onclick="showSection('posts')">üìù My Posts</a>
            <a href="#profile-edit" class="nav-tab" onclick="showSection('profile-edit')">‚öôÔ∏è Edit Profile</a>
            <a href="#calendar" class="nav-tab" onclick="showSection('calendar')">üìÖ Calendar</a>
            <a href="#resources" class="nav-tab" onclick="showSection('resources')">üìÅ Resources</a>
            <a href="#events" class="nav-tab" onclick="showSection('events')">üéâ Events</a>
            <% if (user.role === 'faculty' || user.role === 'staff') { %>
                <a href="#announcements" class="nav-tab" onclick="showSection('announcements')">üì¢ Announcements</a>
            <% } %>
            <a href="#mentorship" class="nav-tab" onclick="showSection('mentorship')">ü§ù Mentorship</a>
        </div>
        
        <!-- Posts Section -->
        <section id="posts-section" class="content-section">
            <h2>Your Posts</h2>
            <div id="posts">
                <% posts.forEach(post => { %>
                    <article class="post" id="post-<%= post.id %>">
                        <header>
                            <h3><%= user.username %></h3>
                            <time><%= new Date(post.created_at).toLocaleString() %></time>
                        </header>
                        
                        <!-- Post Meta Information -->
                        <div class="post-meta">
                            <% if (post.department_name) { %>
                                <span class="meta-tag department">üèõÔ∏è <%= post.department_code %></span>
                            <% } %>
                            <% if (post.course_code) { %>
                                <span class="meta-tag course">üìö <%= post.course_code %></span>
                            <% } %>
                            <% if (post.post_type && post.post_type !== 'general') { %>
                                <span class="meta-tag type <%= post.post_type %>">
                                    <% if (post.post_type === 'discussion') { %>üí¨ Discussion
                                    <% } else if (post.post_type === 'announcement') { %>üì¢ Announcement
                                    <% } else if (post.post_type === 'resource') { %>üìÅ Resource
                                    <% } else if (post.post_type === 'event') { %>üìÖ Event
                                    <% } else if (post.post_type === 'mentorship') { %>ü§ù Mentorship
                                    <% } else { %><%= post.post_type %>
                                    <% } %>
                                </span>
                            <% } %>
                            <% if (post.priority === 'high') { %>
                                <span class="meta-tag priority high">‚ö†Ô∏è Important</span>
                            <% } %>
                        </div>
                        
                        <p class="post-content"><%= post.content %></p>
                        
                        <!-- Tags -->
                        <% if (post.tags) { %>
                            <div class="post-tags">
                                <% post.tags.split(',').forEach(tag => { %>
                                    <span class="tag">#<%= tag.trim() %></span>
                                <% }); %>
                            </div>
                        <% } %>
                        
                        <footer>
                            <div class="post-actions">
                                <button onclick="toggleLike(<%= post.id %>)" class="like-button">
                                    <span class="likes-count"><%= post.likes_count %></span> Likes
                                </button>
                                <button onclick="toggleComments(<%= post.id %>)" class="comment-button">
                                    <span class="comments-count"><%= post.comments_count %></span> Comments
                                </button>
                                <button onclick="deletePost(<%= post.id %>)" class="delete-button">Delete</button>
                            </div>
                            <div class="likes-list" id="likes-<%= post.id %>"></div>
                            <div class="comments-section" id="comments-section-<%= post.id %>" style="display: none;">
                                <div class="comments-list" id="comments-<%= post.id %>"></div>
                                <form onsubmit="event.preventDefault(); commentPost(<%= post.id %>)">
                                    <input type="text" id="comment-input-<%= post.id %>" placeholder="Add a comment" required>
                                    <button type="submit">Comment</button>
                                </form>
                            </div>
                        </footer>
                    </article>
                <% }); %>
            </div>
        </section>
        
        <!-- Profile Edit Section -->
        <section id="profile-edit-section" class="content-section" style="display: none;">
            <h2>‚öôÔ∏è Edit Profile</h2>
            <div class="form-container">
                <form id="profile-form">
                    <div class="form-row">
                        <input type="text" name="username" placeholder="Username" value="<%= user.username %>" required>
                        <select name="department_id">
                            <option value="">Select Department</option>
                            <% departments.forEach(dept => { %>
                                <option value="<%= dept.id %>" <%= user.department_id == dept.id ? 'selected' : '' %>>
                                    <%= dept.name %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                    <% if (user.role === 'student') { %>
                        <div class="form-row">
                            <input type="text" name="student_id" placeholder="Student ID" value="<%= user.student_id || '' %>">
                            <select name="year_of_study">
                                <option value="">Year of Study</option>
                                <option value="1" <%= user.year_of_study == 1 ? 'selected' : '' %>>1st Year</option>
                                <option value="2" <%= user.year_of_study == 2 ? 'selected' : '' %>>2nd Year</option>
                                <option value="3" <%= user.year_of_study == 3 ? 'selected' : '' %>>3rd Year</option>
                                <option value="4" <%= user.year_of_study == 4 ? 'selected' : '' %>>4th Year</option>
                                <option value="5" <%= user.year_of_study == 5 ? 'selected' : '' %>>5th Year</option>
                            </select>
                        </div>
                    <% } %>
                    <textarea name="bio" placeholder="Tell us about yourself..." rows="4"><%= user.bio || '' %></textarea>
                    <button type="submit">üíæ Update Profile</button>
                </form>
            </div>
        </section>
        
        <!-- Academic Calendar Section -->
        <section id="calendar-section" class="content-section" style="display: none;">
            <h2>üìÖ Academic Calendar</h2>
            
            <% if (user.role === 'faculty' || user.role === 'staff') { %>
                <!-- Add Calendar Event Form -->
                <div class="form-container" style="margin-bottom: 2rem;">
                    <h3>üìÖ Add Calendar Event</h3>
                    <form id="calendar-form">
                        <div class="form-row">
                            <input type="text" name="title" placeholder="Event Title" required>
                            <select name="event_type" required>
                                <option value="">Event Type</option>
                                <option value="semester">Semester</option>
                                <option value="examination">Examination</option>
                                <option value="registration">Registration</option>
                                <option value="break">Break/Holiday</option>
                                <option value="ceremony">Ceremony</option>
                                <option value="deadline">Deadline</option>
                            </select>
                        </div>
                        <textarea name="description" placeholder="Event Description" rows="3"></textarea>
                        <div class="form-row">
                            <input type="date" name="start_date" required>
                            <input type="date" name="end_date">
                        </div>
                        <div class="form-row">
                            <select name="department_id">
                                <option value="">All Departments</option>
                                <% departments.forEach(dept => { %>
                                    <option value="<%= dept.id %>"><%= dept.name %></option>
                                <% }); %>
                            </select>
                            <label style="display: flex; align-items: center; color: #1e3a8a; font-weight: 500;">
                                <input type="checkbox" name="is_important" style="margin-right: 0.5rem;">
                                Mark as Important
                            </label>
                        </div>
                        <button type="submit">üìÖ Add to Calendar</button>
                    </form>
                </div>
            <% } %>
            
            <div id="calendar-events"></div>
        </section>
        
        <!-- Resources Section -->
        <section id="resources-section" class="content-section" style="display: none;">
            <h2>üìÅ Academic Resources</h2>
            
            <!-- Share Resource Form -->
            <div class="form-container" style="margin-bottom: 2rem;">
                <h3>üì§ Share a Resource</h3>
                <form id="resource-form" enctype="multipart/form-data">
                    <div class="form-row">
                        <input type="text" name="title" placeholder="Resource Title" required>
                        <select name="resource_type" required>
                            <option value="">Select Type</option>
                            <option value="notes">Notes</option>
                            <option value="slides">Slides</option>
                            <option value="video">Video</option>
                            <option value="assignment">Assignment</option>
                            <option value="reference">Reference</option>
                            <option value="manual">Manual</option>
                            <option value="guide">Guide</option>
                        </select>
                    </div>
                    <textarea name="description" placeholder="Resource Description" rows="3"></textarea>
                    <div class="form-row">
                        <input type="text" name="course_code" placeholder="Course Code (optional)">
                        <select name="department_id">
                            <option value="">Select Department</option>
                            <% departments.forEach(dept => { %>
                                <option value="<%= dept.id %>" <%= user.department_id == dept.id ? 'selected' : '' %>>
                                    <%= dept.name %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="file-upload-container">
                        <label for="resource_file" class="file-upload-label">
                            üìé Choose File or drag and drop
                        </label>
                        <input type="file" id="resource_file" name="resource_file" accept=".pdf,.doc,.docx,.ppt,.pptx,.txt,.zip,.rar,.jpg,.png">
                        <div class="file-info" id="file-info"></div>
                    </div>
                    <input type="url" name="file_url" placeholder="Or paste a URL to external resource">
                    <button type="submit">üöÄ Share Resource</button>
                </form>
            </div>
            
            <div id="resources-list"></div>
        </section>
        
        <!-- Events Section -->
        <section id="events-section" class="content-section" style="display: none;">
            <h2>üéâ Campus Events</h2>
            <div id="events-list"></div>
        </section>
        
        <% if (user.role === 'faculty' || user.role === 'staff') { %>
        <!-- Announcements Section -->
        <section id="announcements-section" class="content-section" style="display: none;">
            <h2>üì¢ Create Announcement</h2>
            
            <!-- Create Announcement Form -->
            <div class="form-container" style="margin-bottom: 2rem;">
                <h3>üì¢ New Announcement</h3>
                <form id="announcement-form">
                    <input type="text" name="title" placeholder="Announcement Title" required>
                    <textarea name="content" placeholder="Announcement content..." rows="5" required></textarea>
                    <div class="form-row">
                        <select name="department_id">
                            <option value="">All Departments</option>
                            <% departments.forEach(dept => { %>
                                <option value="<%= dept.id %>" <%= user.department_id == dept.id ? 'selected' : '' %>>
                                    <%= dept.name %>
                                </option>
                            <% }); %>
                        </select>
                        <select name="priority">
                            <option value="high">High Priority</option>
                            <option value="normal">Normal Priority</option>
                        </select>
                    </div>
                    
                    <!-- Optional Event Details -->
                    <div style="border-top: 2px solid rgba(251, 191, 36, 0.3); margin-top: 1rem; padding-top: 1rem;">
                        <h4 style="color: #1e3a8a; margin-bottom: 1rem;">üìÖ Event Details (Optional)</h4>
                        <div class="form-row">
                            <input type="datetime-local" name="event_date" placeholder="Event Date & Time">
                            <input type="text" name="location" placeholder="Event Location">
                        </div>
                    </div>
                    
                    <button type="submit">üì¢ Post Announcement</button>
                </form>
            </div>
        </section>
        <% } %>
        
        <!-- Mentorship Section -->
        <section id="mentorship-section" class="content-section" style="display: none;">
            <h2>ü§ù Mentorship</h2>
            <div id="mentorship-requests"></div>
        </section>
    </main>
    
    <script src="/js/scripts.js"></script>
    <script>
        // Tab switching functionality
        function showSection(sectionName) {
            // Hide all sections
            document.querySelectorAll('.content-section').forEach(section => {
                section.style.display = 'none';
            });
            
            // Remove active class from all tabs
            document.querySelectorAll('.nav-tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Show selected section
            document.getElementById(sectionName + '-section').style.display = 'block';
            
            // Add active class to clicked tab
            event.target.classList.add('active');
            
            // Load content based on section
            if (sectionName === 'calendar') {
                loadCalendarEvents();
            } else if (sectionName === 'resources') {
                loadResources();
            } else if (sectionName === 'events') {
                loadEvents();
            } else if (sectionName === 'mentorship') {
                loadMentorshipRequests();
            }
        }
        
        // Load academic calendar events
        async function loadCalendarEvents() {
            try {
                const response = await fetch('/api/calendar');
                const events = await response.json();
                const container = document.getElementById('calendar-events');
                
                container.innerHTML = events.map(event => `
                    <div class="calendar-event ${event.is_important ? 'important' : ''}">
                        <div class="event-date">${new Date(event.start_date).toLocaleDateString()}</div>
                        <div class="event-title">${event.title}</div>
                        <div class="event-description">${event.description || ''}</div>
                        <div class="event-meta">
                            <span class="meta-tag">${event.event_type}</span>
                            ${event.department_name ? `<span class="meta-tag">${event.department_name}</span>` : ''}
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading calendar:', error);
            }
        }
        
        // Load resources
        async function loadResources() {
            try {
                const response = await fetch('/api/resources');
                const resources = await response.json();
                const container = document.getElementById('resources-list');
                
                container.innerHTML = resources.map(resource => `
                    <div class="resource-card">
                        <div class="resource-title">${resource.title}</div>
                        <div class="resource-meta">
                            <span>üìÅ ${resource.resource_type}</span>
                            ${resource.course_code ? `<span>üìö ${resource.course_code}</span>` : ''}
                            <span>üë§ ${resource.uploader_name}</span>
                            ${resource.department_name ? `<span>üèõÔ∏è ${resource.department_name}</span>` : ''}
                        </div>
                        <div class="resource-description">${resource.description || ''}</div>
                        ${resource.file_url ? `
                            <div style="margin-top: 1rem;">
                                <a href="${resource.file_url}" target="_blank" class="nav-tab" style="display: inline-block; margin: 0;">
                                    ${resource.file_url.startsWith('/uploads/') ? 'üì• Download File' : 'üîó Open Link'}
                                </a>
                            </div>
                        ` : ''}
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading resources:', error);
            }
        }
        
        // Load events
        async function loadEvents() {
            try {
                const response = await fetch('/api/events');
                const events = await response.json();
                const container = document.getElementById('events-list');
                
                container.innerHTML = events.map(event => `
                    <div class="resource-card">
                        <div class="resource-title">${event.title}</div>
                        <div class="resource-meta">
                            <span>üìÖ ${new Date(event.event_date).toLocaleDateString()}</span>
                            <span>üìç ${event.location || 'TBA'}</span>
                            <span>üë§ ${event.organizer_name}</span>
                        </div>
                        <div class="resource-description">${event.description || ''}</div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading events:', error);
            }
        }
        
        // Load mentorship requests
        async function loadMentorshipRequests() {
            try {
                const response = await fetch('/api/mentorship');
                const requests = await response.json();
                const container = document.getElementById('mentorship-requests');
                
                container.innerHTML = requests.map(request => `
                    <div class="mentorship-request ${request.status}">
                        <div class="resource-title">
                            ${request.mentor_name} ‚Üî ${request.mentee_name}
                        </div>
                        <div class="resource-meta">
                            <span>üìö ${request.subject_area}</span>
                            <span>üìä ${request.status}</span>
                        </div>
                        <div class="resource-description">${request.message || ''}</div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading mentorship:', error);
            }
        }
        
        // File upload functionality
        document.getElementById('resource_file').addEventListener('change', function(e) {
            const fileInfo = document.getElementById('file-info');
            const file = e.target.files[0];
            
            if (file) {
                const fileSize = (file.size / 1024 / 1024).toFixed(2);
                fileInfo.innerHTML = `
                    <strong>Selected:</strong> ${file.name}<br>
                    <strong>Size:</strong> ${fileSize} MB<br>
                    <strong>Type:</strong> ${file.type}
                `;
                fileInfo.classList.add('show');
            } else {
                fileInfo.classList.remove('show');
            }
        });
        
        // Resource form submission
        document.getElementById('resource-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const submitButton = this.querySelector('button[type="submit"]');
            const originalText = submitButton.textContent;
            
            submitButton.textContent = '‚è≥ Uploading...';
            submitButton.disabled = true;
            
            try {
                const response = await fetch('/share-resource', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('‚úÖ Resource shared successfully!');
                    this.reset();
                    document.getElementById('file-info').classList.remove('show');
                    loadResources(); // Refresh the resources list
                } else {
                    alert('‚ùå Error: ' + result.error);
                }
            } catch (error) {
                console.error('Error sharing resource:', error);
                alert('‚ùå Error sharing resource. Please try again.');
            } finally {
                submitButton.textContent = originalText;
                submitButton.disabled = false;
            }
        });
        
        // Profile form submission
        document.getElementById('profile-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const submitButton = this.querySelector('button[type="submit"]');
            const originalText = submitButton.textContent;
            
            submitButton.textContent = '‚è≥ Updating...';
            submitButton.disabled = true;
            
            try {
                const response = await fetch('/update-profile', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('‚úÖ Profile updated successfully!');
                    location.reload(); // Refresh to show updated info
                } else {
                    alert('‚ùå Error: ' + result.error);
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                alert('‚ùå Error updating profile. Please try again.');
            } finally {
                submitButton.textContent = originalText;
                submitButton.disabled = false;
            }
        });
        
        // Calendar form submission
        if (document.getElementById('calendar-form')) {
            document.getElementById('calendar-form').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                const submitButton = this.querySelector('button[type="submit"]');
                const originalText = submitButton.textContent;
                
                submitButton.textContent = '‚è≥ Adding...';
                submitButton.disabled = true;
                
                try {
                    const response = await fetch('/add-calendar-event', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(Object.fromEntries(formData))
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        alert('‚úÖ Calendar event added successfully!');
                        this.reset();
                        loadCalendarEvents(); // Refresh calendar
                    } else {
                        alert('‚ùå Error: ' + result.error);
                    }
                } catch (error) {
                    console.error('Error adding calendar event:', error);
                    alert('‚ùå Error adding calendar event. Please try again.');
                } finally {
                    submitButton.textContent = originalText;
                    submitButton.disabled = false;
                }
            });
        }
        
        // Announcement form submission
        if (document.getElementById('announcement-form')) {
            document.getElementById('announcement-form').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                const submitButton = this.querySelector('button[type="submit"]');
                const originalText = submitButton.textContent;
                
                submitButton.textContent = '‚è≥ Posting...';
                submitButton.disabled = true;
                
                try {
                    const response = await fetch('/create-announcement', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(Object.fromEntries(formData))
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        alert('‚úÖ Announcement posted successfully!');
                        this.reset();
                    } else {
                        alert('‚ùå Error: ' + result.error);
                    }
                } catch (error) {
                    console.error('Error creating announcement:', error);
                    alert('‚ùå Error creating announcement. Please try again.');
                } finally {
                    submitButton.textContent = originalText;
                    submitButton.disabled = false;
                }
            });
        }
    </script>
</body>
</html>

